apiVersion: v1
kind: Template
metadata:
  name: isis-api-deployment
  annotations:
    description: "Thoth: Isis API"
    openshift.io/display-name: "Thoth: Isis API"
    version: 0.7.1
    tags: thoth,isis-api,ai-stacks,aistacks
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This template defines resources needed to deploy Thoth Isis API on OpenShift.
    template.openshift.io/provider-display-name: "Red Hat, Inc."
  labels:
    template: isis-api-deployment
    app: thoth
    component: isis-api

parameters:
  - description: Registry the ImageStream to be use lives in
    displayName: ImageStream Registry
    required: true
    name: IMAGE_STREAM_REGISTRY
    # TODO adjust ansible role so that we dont need a default here
    value: "docker-registry.default.svc:5000"

  - description: Namespace the ImageStream to be use lives in
    displayName: ImageStream Project
    required: true
    name: IMAGE_STREAM_NAMESPACE
    # TODO adjust ansible role so that we dont need a default here
    value: "thoth-infra-stage"

  - description: Tag of the ImageStream to be use
    displayName: ImageStream Tag
    required: true
    name: IMAGE_STREAM_TAG
    value: "latest"

objects:
  - kind: Route
    apiVersion: v1
    metadata:
      name: isis-api
      labels:
        app: thoth
        component: isis-api
    spec:
      to:
        kind: Service
        name: isis-api
      port:
        targetPort: isis-api

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: thoth
        component: isis-api
      name: isis-api
    spec:
      ports:
        - port: 80
          name: isis-api
          protocol: TCP
          targetPort: 8080
        - port: 6006
          name: tensorboard
          protocol: TCP
          targetPort: 6006
      selector:
        service: isis-api

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      labels:
        app: thoth
        component: isis-api
      name: isis-api
    spec:
      replicas: 1
      selector:
        service: isis-api
      template:
        metadata:
          labels:
            service: isis-api
        spec:
          serviceAccountName: analyzer
          volumes:
            - name: model-volume
              emptyDir: {}
          initContainers:
            - name: isis-model-download
              image: "${IMAGE_STREAM_REGISTRY}/${IMAGE_STREAM_NAMESPACE}/isis-api:${IMAGE_STREAM_TAG}"
              volumeMounts:
                - mountPath: /opt/app-root/src/model
                  name: model-volume
              env:
                - name: APP_SCRIPT
                  value: "init.py"
                - name: THOTH_DEPLOYMENT_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: storage-bucket-name
                      name: thoth
                - name: THOTH_S3_ENDPOINT_URL
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-host
                      name: thoth
                - name: THOTH_CEPH_BUCKET
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-name
                      name: thoth
                - name: THOTH_CEPH_BUCKET_PREFIX
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-prefix
                      name: thoth
                - name: THOTH_CEPH_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-key-id
                - name: THOTH_CEPH_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-secret-key
              resources:
                requests:
                  memory: "1Gi"
                  cpu: "500m"
                limits:
                  memory: "1Gi"
                  cpu: "500m"
          containers:
            - name: isis-api
              image: "${IMAGE_STREAM_REGISTRY}/${IMAGE_STREAM_NAMESPACE}/isis-api:${IMAGE_STREAM_TAG}"
              env:
                - name: APP_MODULE
                  value: "isis.entrypoint:app"
                - name: ISIS_API_APP_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: app-secret-key
                - name: THOTH_DEPLOYMENT_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: storage-bucket-name
                      name: thoth
                - name: THOTH_S3_ENDPOINT_URL
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-host
                      name: thoth
                - name: THOTH_CEPH_BUCKET
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-name
                      name: thoth
                - name: THOTH_CEPH_BUCKET_PREFIX
                  valueFrom:
                    configMapKeyRef:
                      key: ceph-bucket-prefix
                      name: thoth
                - name: THOTH_CEPH_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-key-id
                - name: THOTH_CEPH_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: ceph-secret-key
                - name: PROMETHEUS_PUSHGATEWAY_HOST
                  valueFrom:
                    configMapKeyRef:
                      key: prometheus-pushgateway-host
                      name: thoth
                - name: PROMETHEUS_PUSHGATEWAY_PORT
                  valueFrom:
                    configMapKeyRef:
                      name: thoth
                      key: prometheus-pushgateway-port
                - name: SENTRY_DSN
                  valueFrom:
                    secretKeyRef:
                      name: thoth
                      key: sentry-dsn
              volumeMounts:
                - mountPath: /opt/app-root/src/model
                  name: model-volume
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                requests:
                  memory: "384Mi"
                  cpu: "250m"
                limits:
                  memory: "384Mi"
                  cpu: "250m"
              readinessProbe:
                httpGet:
                  path: "/readiness"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                timeoutSeconds: 10
              livenessProbe:
                httpGet:
                  path: "/liveness"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 60
                timeoutSeconds: 10
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - isis-api
              - tensorboard
              - isis-model-download
            from:
              kind: ImageStreamTag
              name: "${IMAGE_STREAM_NAMESPACE}/isis-api:${IMAGE_STREAM_TAG}""
